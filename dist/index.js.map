{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar cos = require( '@stdlib/math-base-special-cos' );\nvar deg2rad = require( '@stdlib/math-base-special-deg2rad' );\nvar isInteger = require( '@stdlib/math-base-assert-is-integer' );\nvar isInfinite = require( '@stdlib/assert-is-infinite' );\n\n\n// MAIN //\n\n/**\n* Computes the cosine of an angle measured in degrees.\n*\n* @param {number} x - input value (in degrees)\n* @returns {number} cosine\n*\n* @example\n* var v = cosd( 0.0 );\n* // returns 1.0\n*\n* @example\n* var v = cosd( 90.0 );\n* // returns 0.0\n*\n* @example\n* var v = cosd( 60.0 );\n* // returns ~0.5\n*\n* @example\n* var v = cosd( NaN );\n* // returns NaN\n*/\nfunction cosd( x ) {\n\tvar xRad;\n\n\tif ( isInfinite( x ) ) {\n\t\treturn NaN;\n\t}\n\n\tif ( isInteger( ( ( x / 90.0 ) - 1.0 ) / 2.0 ) ) {\n\t\treturn 0.0;\n\t}\n\n\txRad = deg2rad( x );\n\n\treturn cos( xRad );\n}\n\n\n// EXPORTS //\n\nmodule.exports = cosd;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the cosine of an angle measured in degrees.\n*\n* @module @stdlib/math-base-special-cosd\n*\n* @example\n* var cosd = require( '@stdlib/math-base-special-cosd' );\n*\n* var v = cosd( 0.0 );\n* // returns 1.0\n*\n* v = cosd( 90.0 );\n* // returns 0.0\n*\n* v = cosd( 60.0 );\n* // returns ~0.5\n*\n* v = cosd( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAM,QAAS,+BAAgC,EAC/CC,EAAU,QAAS,mCAAoC,EACvDC,EAAY,QAAS,qCAAsC,EAC3DC,EAAa,QAAS,4BAA6B,EA2BvD,SAASC,EAAMC,EAAI,CAClB,IAAIC,EAEJ,OAAKH,EAAYE,CAAE,EACX,IAGHH,GAAeG,EAAI,GAAS,GAAQ,CAAI,EACrC,GAGRC,EAAOL,EAASI,CAAE,EAEXL,EAAKM,CAAK,EAClB,CAKAP,EAAO,QAAUK,IC5BjB,IAAIG,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "cos", "deg2rad", "isInteger", "isInfinite", "cosd", "x", "xRad", "main"]
}
