{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar deg2rad = require( '@stdlib/math-base-special-deg2rad' );\nvar kernelSin = require( '@stdlib/math-base-special-kernel-sin' );\nvar kernelCos = require( '@stdlib/math-base-special-kernel-cos' );\nvar fmod = require( '@stdlib/math-base-special-fmod' );\nvar abs = require( '@stdlib/math-base-special-abs' );\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar isInfinite = require( '@stdlib/math-base-assert-is-infinite' );\n\n\n// MAIN //\n\n/**\n* Computes the cosine of an angle measured in degrees.\n*\n* @param {number} x - input value (in degrees)\n* @returns {number} cosine\n*\n* @example\n* var v = cosd( 0.0 );\n* // returns 1.0\n*\n* @example\n* var v = cosd( 90.0 );\n* // returns 0.0\n*\n* @example\n* var v = cosd( 60.0 );\n* // returns ~0.5\n*\n* @example\n* var v = cosd( NaN );\n* // returns NaN\n*/\nfunction cosd( x ) {\n\tvar rx;\n\n\tif (\n\t\tisInfinite( x ) ||\n\t\tisnan( x )\n\t) {\n\t\treturn NaN;\n\t}\n\n\trx = abs( fmod( x, 360.0 ) );\n\n\tif ( rx <= 45.0 ) {\n\t\treturn kernelCos( deg2rad( rx ), 0.0 );\n\t}\n\tif ( rx < 135.0 ) {\n\t\treturn kernelSin( deg2rad( 90.0-rx ), 0.0 );\n\t}\n\tif ( rx <= 225.0 ) {\n\t\treturn -kernelCos( deg2rad( 180.0-rx ), 0.0 );\n\t}\n\tif ( rx < 315.0 ) {\n\t\treturn kernelSin( deg2rad( rx-270.0 ), 0.0 );\n\t}\n\treturn kernelCos( deg2rad( 360.0-rx ), 0.0 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = cosd;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the cosine of an angle measured in degrees.\n*\n* @module @stdlib/math-base-special-cosd\n*\n* @example\n* var cosd = require( '@stdlib/math-base-special-cosd' );\n*\n* var v = cosd( 0.0 );\n* // returns 1.0\n*\n* v = cosd( 90.0 );\n* // returns 0.0\n*\n* v = cosd( 60.0 );\n* // returns ~0.5\n*\n* v = cosd( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAU,QAAS,mCAAoC,EACvDC,EAAY,QAAS,sCAAuC,EAC5DC,EAAY,QAAS,sCAAuC,EAC5DC,EAAO,QAAS,gCAAiC,EACjDC,EAAM,QAAS,+BAAgC,EAC/CC,EAAQ,QAAS,iCAAkC,EACnDC,EAAa,QAAS,sCAAuC,EA2BjE,SAASC,EAAMC,EAAI,CAClB,IAAIC,EAEJ,OACCH,EAAYE,CAAE,GACdH,EAAOG,CAAE,EAEF,KAGRC,EAAKL,EAAKD,EAAMK,EAAG,GAAM,CAAE,EAEtBC,GAAM,GACHP,EAAWF,EAASS,CAAG,EAAG,CAAI,EAEjCA,EAAK,IACFR,EAAWD,EAAS,GAAKS,CAAG,EAAG,CAAI,EAEtCA,GAAM,IACH,CAACP,EAAWF,EAAS,IAAMS,CAAG,EAAG,CAAI,EAExCA,EAAK,IACFR,EAAWD,EAASS,EAAG,GAAM,EAAG,CAAI,EAErCP,EAAWF,EAAS,IAAMS,CAAG,EAAG,CAAI,EAC5C,CAKAV,EAAO,QAAUQ,IC1CjB,IAAIG,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "deg2rad", "kernelSin", "kernelCos", "fmod", "abs", "isnan", "isInfinite", "cosd", "x", "rx", "main"]
}
